{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\n\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst refs = {\n  input: document.querySelector('#datetime-picker'),\n  startBtn: document.querySelector('[data-start]'),\n  daysEl: document.querySelector('[data-days]'),\n  hoursEl: document.querySelector('[data-hours]'),\n  minutesEl: document.querySelector('[data-minutes]'),\n  secondsEl: document.querySelector('[data-seconds]'),\n};\nlet userSelectedDate;\nrefs.startBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0].getTime() <= Date.now()) {\n      iziToast.error({\n        message: ' Please choose a date in the future',\n        backgroundColor: '#FF4500',\n        messageColor: '#FFFFFF',\n        position: 'topRight',\n        icon: '',\n      });\n\n      refs.startBtn.disabled = true;\n    } else {\n      refs.startBtn.disabled = false;\n      userSelectedDate = selectedDates[0].getTime();\n    }\n  },\n};\n\nflatpickr(refs.input, options);\n\nrefs.startBtn.addEventListener('click', onStartBtnClick);\n\nfunction onStartBtnClick() {\n  refs.startBtn.disabled = true;\n  refs.input.disabled = true;\n\n  const timerId = setInterval(() => {\n    const diff = userSelectedDate - Date.now();\n\n    if (diff <= 0) {\n      clearInterval(timerId);\n      refs.input.disabled = false;\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(diff);\n\n    refs.daysEl.textContent = days;\n    refs.hoursEl.textContent = hours;\n    refs.minutesEl.textContent = minutes;\n    refs.secondsEl.textContent = seconds;\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = pad(Math.floor(ms / day));\n  // Remaining hours\n  const hours = pad(Math.floor((ms % day) / hour));\n  // Remaining minutes\n  const minutes = pad(Math.floor(((ms % day) % hour) / minute));\n  // Remaining seconds\n  const seconds = pad(Math.floor((((ms % day) % hour) % minute) / second));\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction pad(value) {\n  return value.toString().padStart(2, 0);\n}\n"],"names":["refs","userSelectedDate","options","selectedDates","iziToast","flatpickr","onStartBtnClick","timerId","diff","days","hours","minutes","seconds","convertMs","ms","pad","value"],"mappings":"+IAMA,MAAMA,EAAO,CACX,MAAO,SAAS,cAAc,kBAAkB,EAChD,SAAU,SAAS,cAAc,cAAc,EAC/C,OAAQ,SAAS,cAAc,aAAa,EAC5C,QAAS,SAAS,cAAc,cAAc,EAC9C,UAAW,SAAS,cAAc,gBAAgB,EAClD,UAAW,SAAS,cAAc,gBAAgB,CACpD,EACA,IAAIC,EACJD,EAAK,SAAS,SAAW,GAEzB,MAAME,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAE,QAAO,GAAM,KAAK,OACrCC,EAAS,MAAM,CACb,QAAS,sCACT,gBAAiB,UACjB,aAAc,UACd,SAAU,WACV,KAAM,EACd,CAAO,EAEDJ,EAAK,SAAS,SAAW,KAEzBA,EAAK,SAAS,SAAW,GACzBC,EAAmBE,EAAc,CAAC,EAAE,QAAO,EAE9C,CACH,EAEAE,EAAUL,EAAK,MAAOE,CAAO,EAE7BF,EAAK,SAAS,iBAAiB,QAASM,CAAe,EAEvD,SAASA,GAAkB,CACzBN,EAAK,SAAS,SAAW,GACzBA,EAAK,MAAM,SAAW,GAEtB,MAAMO,EAAU,YAAY,IAAM,CAChC,MAAMC,EAAOP,EAAmB,KAAK,IAAG,EAExC,GAAIO,GAAQ,EAAG,CACb,cAAcD,CAAO,EACrBP,EAAK,MAAM,SAAW,GACtB,MACD,CAED,KAAM,CAAE,KAAAS,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAI,EAExDR,EAAK,OAAO,YAAcS,EAC1BT,EAAK,QAAQ,YAAcU,EAC3BV,EAAK,UAAU,YAAcW,EAC7BX,EAAK,UAAU,YAAcY,CAC9B,EAAE,GAAI,CACT,CAEA,SAASC,EAAUC,EAAI,CAQrB,MAAML,EAAOM,EAAI,KAAK,MAAMD,EAAK,KAAG,CAAC,EAE/BJ,EAAQK,EAAI,KAAK,MAAOD,EAAK,MAAO,IAAI,CAAC,EAEzCH,EAAUI,EAAI,KAAK,MAAQD,EAAK,MAAO,KAAQ,GAAM,CAAC,EAEtDF,EAAUG,EAAI,KAAK,MAASD,EAAK,MAAO,KAAQ,IAAU,GAAM,CAAC,EAEvE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASG,EAAIC,EAAO,CAClB,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,CAAC,CACvC"}